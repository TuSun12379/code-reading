import os 
import pandas as pd
# print(os.getcwd())

def get_file_in_dir(ext, drc): # 定义get_file_in_dir()函数，ext传入参数为文件后缀
    for files in os.listdir(drc): # os.listdir()用于获取当前目录文件列表, 包含文件名，小点和后缀的完整信息
        # print(files)
        if files.endswith(ext): # 限定当文件以.hkl结尾
            yield files # 将文件当前路径和.hkl文件结合组成完整路径。

def load_hkl_files(fns = []):
    dfn1 = pd.read_table(fns[0], sep = '\s* ',index_col = [0, 1, 2], engine = 'python', header = None, names="h k l val sigma".split())
    dfn1.index = pd.Index(dfn1.index) # 这里index的作用是其会根据指定的index_col将前三列即hkl组成一个元组
    print(dfn1)  # dfn1此时的值即为out结果，dfn1.index即为(0, 2, 0), (0, 4, 0).....


def merge_entry():
    fns = []
    fn = os.getcwd() # 获取目前路径
    if os.path.isdir(fn): # 判断当前目录是否为目录
        fns.extend(list(get_file_in_dir(".hkl", drc = fn))) # 通过自定义函数获取包含文件名的路径，然后转换成列表，通过extend()函数添加到列表。
    # print(fns[0])
    # print(fns)
    load_hkl_files(fns)
    

if __name__ == '__main__':
    merge_entry()

"""out:
                 val  sigma
(0, 2, 0)     681.55    1.0
(0, 4, 0)   20483.45    1.0
(0, 6, 0)    2532.30    1.0
(0, 8, 0)   23126.55    1.0
(0, 10, 0)     61.45    1.0
(0, 12, 0)   4281.10    1.0
(0, 14, 0)  84885.70    1.0
(0, 16, 0)   4763.80    1.0
(0, 18, 0)   1468.30    1.0
(0, 20, 0)    569.40    1.0
(0, 22, 0)   7797.00    1.0
(0, 24, 0)   4016.10    1.0
(0, 26, 0)   8359.80    1.0
(0, 28, 0)  57992.30    1.0
(0, 30, 0)    294.50    1.0
(0, 32, 0)    422.50    1.0
(0, 34, 0)     26.60    1.0
(1, 21, 1)    563.70    1.0
(1, 23, 1)    828.50    1.0
(1, 25, 1)    802.10    1.0
(1, 27, 1)   1164.10    1.0
(1, 29, 1)    151.10    1.0
(1, 31, 1)     89.60    1.0
(5, 23, 3)     14.70    1.0
(5, 25, 3)   1315.40    1.0
(5, 27, 3)    557.30    1.0
(5, 29, 3)    175.20    1.0
(5, 31, 3)   1452.50    1.0
(6, 0, 4)   23767.20    1.0
(6, 2, 4)    1109.45    1.0
(6, 4, 4)     153.75    1.0
(6, 6, 4)     134.25    1.0
(6, 8, 4)    2850.05    1.0
(6, 10, 4)   1282.10    1.0
(6, 12, 4)     16.95    1.0
(6, 14, 4)   4320.55    1.0
(6, 16, 4)    444.70    1.0
(6, 18, 4)    137.20    1.0
(6, 20, 4)    383.00    1.0
(6, 22, 4)    151.10    1.0
(6, 24, 4)    734.20    1.0
(6, 26, 4)   6123.70    1.0
(6, 28, 4)   3001.70    1.0
(6, 30, 4)    194.80    1.0
(7, 3, 5)       0.40    1.0
(7, 5, 5)      32.70    1.0
(7, 7, 5)     499.10    1.0
(7, 9, 5)      20.60    1.0
(7, 11, 5)      7.40    1.0
(7, 13, 5)   7110.20    1.0
(7, 15, 5)   4093.80    1.0
(7, 17, 5)     40.70    1.0
(7, 19, 5)    282.00    1.0
(7, 21, 5)    187.90    1.0
(7, 23, 5)      3.00    1.0
(7, 27, 5)     73.00    1.0
(7, 29, 5)    118.50    1.0
(12, 0, 8)     66.60    1.0
(12, 2, 8)    193.95    1.0
(12, 4, 8)     70.90    1.0
"""